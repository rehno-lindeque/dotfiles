# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  # Pretty boot 
  boot.initrd.kernelModules = [ "fbcon" ];

  # Enable unfree packages
  nixpkgs.config.allowUnfree = true;

  # Enable virtualbox additions (and disable unnecessary settings)
  services.virtualboxGuest.enable = true;
  boot.initrd.checkJournalingFS = false;

  # Use the GRUB 2 boot loader.
  boot.loader.grub.enable = true;
  boot.loader.grub.version = 2;
  # Define on which hard drive you want to install Grub.
  # boot.loader.grub.device = "/dev/sda";

  # networking.hostName = ""; # Define your hostname.
  # networking.hostId = "";
  # # networking.wireless.enable = true;  # Enables wireless.

  # User account (requires: useradd -m me ; passwd me )
  # users.extraGroups.wheel.gid = 0; # TODO: remove?
  users.extraUsers.me = {
    createHome = true;
    home = "/home/me";
    # description = "Name Surname";
    extraGroups = [ "wheel" "disk" "vboxusers" "cdrom" ];
    isSystemUser = false;
    useDefaultShell = true;
  };
  # security.sudo.enable = true;

  # Select internationalisation properties.
  # i18n = {
  #   consoleFont = "lat9w-16";
  #   consoleKeyMap = "us";
  #   defaultLocale = "en_US.UTF-8";
  # };

  # List packages installed in system profile. To search by name, run:
  # $ nix-env -qaP | grep wget
  environment.systemPackages = with pkgs; [
    wget
    haskellPackages.ghc
    # haskellPackages.haskellPlatform
    # dmenu
    # haskellPackages.xmobar
    haskellPackages.xmonad
    # haskellPackages.xmonadContrib
    # haskellPackages.xmonadExtras
  ];

  # List services that you want to enable:

  # Enable the OpenSSH daemon.
  services.openssh.enable = true;

  # Enable CUPS to print documents.
  # services.printing.enable = true;

  services.xserver = {
    # Enable the X11 windowing system.
    enable = true;
    layout = "us";

    # Gnome display manager 
    # * This works well with xmonad?
    # * Familiar for people who are used to working with ubuntu
    displayManager = {
      # Disable slim (necessary?)
      # slim.enable = false;
      # gdm.enable = true;
      # desktopManagerHandlesLidAndPower = false;

      # kdm.enable = true;

      # Automatically log in
      # auto.enable = true;
      # auto.user = "me";
    };

    desktopManager = {
      # Disable xterm (necessary?)
      xterm.enable = false;    
      gnome3.enable = true;
      default = "gnome3";

      # kde4.enable = true;
    };

    # Enable XMonad Desktop Environment.
    # * Is this necessary?
    #   $ nix-env -f "<nixpkgs>" -iA haskellPackages.xmonad
    windowManager = {
      # xmonad.enable = true; 
      # xmonad.enableContribAndExtras = true;
    };
  };

  # Define a user account. Don't forget to set a password with ‘passwd’.
  # users.extraUsers.guest = {
  #   isNormalUser = true;
  #   uid = 1000;
  # };

}
